$date
	Wed Apr 28 22:47:14 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module adder_tb $end
$var wire 5 ! sum [4:0] $end
$var reg 4 " a [3:0] $end
$var reg 4 # b [3:0] $end
$var reg 1 $ clk $end
$scope module uut $end
$var wire 4 % a [3:0] $end
$var wire 4 & b [3:0] $end
$var wire 1 $ clock $end
$var reg 5 ' carry [4:0] $end
$var reg 4 ( g [3:0] $end
$var reg 4 ) p [3:0] $end
$var reg 5 * sum [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx *
bx )
bx (
bx0 '
bx &
bx %
0$
bx #
bx "
bx !
$end
#5000
1$
#10000
0$
b100 #
b100 &
b11 "
b11 %
#15000
b1111 !
b1111 *
b1000 '
b0 (
b111 )
1$
#20000
0$
b111 #
b111 &
b101 "
b101 %
#25000
b1100 !
b1100 *
b1110 '
b101 (
b10 )
1$
#30000
0$
b10 #
b10 &
b1000 "
b1000 %
